{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/SavedMovies/SavedMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { Footer } from \"../Footer/Footer\";\nimport { api } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SavedMovies = () => {\n  _s();\n\n  const [films, setFilms] = useState(null);\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n  const [filmsShowed, setFilmsShowed] = useState([]);\n  const [filmsWithTumbler, setFilmsWithTumbler] = useState([]);\n  const [filmsShowedWithTumbler, setFilmsShowedWithTumbler] = useState([]);\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    setPreloader(true);\n\n    try {\n      const data = films;\n      let filterData = data.filter(_ref => {\n        let {\n          nameRU\n        } = _ref;\n        return nameRU.toLowerCase().includes(inputSearch.toLowerCase());\n      });\n      if (tumbler) filterData.filter(_ref2 => {\n        let {\n          duration\n        } = _ref2;\n        return duration <= 40;\n      });\n      setFilmsShowed(filterData);\n\n      if (inputSearch) {\n        localStorage.setItem('savedFilms', JSON.stringify(filterData)); // сохраняем в локалсторедж\n\n        localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n\n        localStorage.setItem('savedFilmsInputSearch', inputSearch); // сохраняем в локалсторедж то что ввели в поиск\n      } else {\n        localStorage.removeItem('savedFilms');\n        localStorage.removeItem('savedFilmsTumbler');\n        localStorage.removeItem('savedFilmsInputSearch');\n      }\n    } catch {\n      setFilms([]);\n      localStorage.removeItem('savedFilms');\n      localStorage.removeItem('savedFilmsTumbler');\n      localStorage.removeItem('savedFilmsInputSearch');\n    } finally {\n      setPreloader(false);\n    }\n  }\n\n  async function handleGetMoviesTumbler(inputSearch, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n\n    if (tumbler) {\n      setFilmsShowedWithTumbler(filmsShowed);\n      setFilmsWithTumbler(films);\n      filterDataShowed = filmsShowed.filter(_ref3 => {\n        let {\n          duration\n        } = _ref3;\n        return duration <= 40;\n      });\n      filterData = films.filter(_ref4 => {\n        let {\n          duration\n        } = _ref4;\n        return duration <= 40;\n      });\n      handleGetMovies(inputSearch, tumbler);\n    } else {\n      filterDataShowed = filmsShowedWithTumbler;\n      filterData = filmsWithTumbler;\n      handleGetMovies(inputSearch, tumbler);\n    }\n\n    localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n\n    handleGetMovies(inputSearch, tumbler);\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData);\n  }\n\n  async function savedMoviesToggle(film, fav) {\n    if (!fav) {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(film._id, token);\n        const newFilms = await api.getLikeMovies(token);\n        setFilmsShowed(newFilms);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  useEffect(() => {\n    const localStorageFilms = localStorage.getItem('savedFilms');\n\n    if (localStorageFilms) {\n      setFilms(JSON.parse(localStorageFilms));\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token).then(data => {\n      setFilms(data);\n      setFilmsShowed(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleGetMovies: handleGetMovies,\n      filmsTumbler: filmsTumbler,\n      filmsInputSearch: filmsInputSearch,\n      handleGetMoviesTumbler: handleGetMoviesTumbler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), preloader && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }, this), !preloader && films !== null && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      filmsRemains: [],\n      savedMoviesToggle: savedMoviesToggle,\n      films: filmsShowed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedMovies, \"6bgWUl5T6V5pMDoAOZbUoO1C8oY=\");\n\n_c = SavedMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedMovies\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/SavedMovies/SavedMovies.js"],"names":["React","useEffect","useState","Header","SearchForm","Navigation","MoviesCardList","Preloader","Footer","api","SavedMovies","films","setFilms","preloader","setPreloader","filmsTumbler","setFilmsTumbler","filmsInputSearch","setFilmsInputSearch","filmsShowed","setFilmsShowed","filmsWithTumbler","setFilmsWithTumbler","filmsShowedWithTumbler","setFilmsShowedWithTumbler","handleGetMovies","inputSearch","tumbler","data","filterData","filter","nameRU","toLowerCase","includes","duration","localStorage","setItem","JSON","stringify","removeItem","handleGetMoviesTumbler","filterDataShowed","savedMoviesToggle","film","fav","token","getItem","removeNewCard","_id","newFilms","getLikeMovies","err","console","log","localStorageFilms","parse","then","catch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { Footer } from \"../Footer/Footer\";\nimport { api } from \"../../utils/api\";\n\nexport const SavedMovies = () => {\n\n  const [films, setFilms] = useState(null);\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n  const [filmsShowed, setFilmsShowed] = useState([]);\n\n  const [filmsWithTumbler, setFilmsWithTumbler] = useState([]);\n  const [filmsShowedWithTumbler, setFilmsShowedWithTumbler] = useState([]);\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    setPreloader(true);\n\n    try {\n      const data = films;\n      let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      if (tumbler)\n        filterData.filter(({ duration }) => duration <= 40);\n      setFilmsShowed(filterData);\n      if (inputSearch) {\n        localStorage.setItem('savedFilms', JSON.stringify(filterData)); // сохраняем в локалсторедж\n        localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n        localStorage.setItem('savedFilmsInputSearch', inputSearch); // сохраняем в локалсторедж то что ввели в поиск\n      } else {\n        localStorage.removeItem('savedFilms');\n        localStorage.removeItem('savedFilmsTumbler');\n        localStorage.removeItem('savedFilmsInputSearch');\n      }\n    } catch {\n\n      setFilms([]);\n      localStorage.removeItem('savedFilms');\n      localStorage.removeItem('savedFilmsTumbler');\n      localStorage.removeItem('savedFilmsInputSearch');\n    } finally {\n      setPreloader(false)\n    }\n  }\n\n   \n  async function handleGetMoviesTumbler(inputSearch, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n    if (tumbler) {\n      setFilmsShowedWithTumbler(filmsShowed);\n      setFilmsWithTumbler(films);\n\n      filterDataShowed = filmsShowed.filter(({ duration }) => duration <= 40);\n      filterData = films.filter(({ duration }) => duration <= 40);\n\n      handleGetMovies(inputSearch, tumbler)\n\n    } else {\n      filterDataShowed = filmsShowedWithTumbler;\n      filterData = filmsWithTumbler;\n      handleGetMovies(inputSearch, tumbler)\n    }\n\n    localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n    handleGetMovies(inputSearch, tumbler)\n\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData)\n\n  }\n\n  async function savedMoviesToggle(film, fav) {\n    if (!fav) {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(film._id, token)\n        const newFilms = await api.getLikeMovies(token);\n        setFilmsShowed(newFilms);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    const localStorageFilms = localStorage.getItem('savedFilms')\n    if (localStorageFilms) {\n      setFilms(JSON.parse(localStorageFilms));\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token)\n      .then((data) => {\n        setFilms(data);\n        setFilmsShowed(data);\n      })\n      .catch((err) => console.log(err));\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <SearchForm\n        handleGetMovies={handleGetMovies}\n        filmsTumbler={filmsTumbler}\n        filmsInputSearch={filmsInputSearch}\n        handleGetMoviesTumbler={handleGetMoviesTumbler}\n      />\n      {preloader && <Preloader />}\n\n      {!preloader && films !== null &&\n        <MoviesCardList\n          filmsRemains={[]}\n          savedMoviesToggle={savedMoviesToggle}\n          films={filmsShowed}\n        />\n      }\n      <Footer />\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}