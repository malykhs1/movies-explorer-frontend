{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport * as Auth from \"../../utils/auth\";\nimport { ProtectedRoute } from \"../ProtectedRoute/ProtectedRoute\";\nimport { api } from \"../../utils/api\";\nimport { Register } from \"../Registrer/Register\";\nimport { Login } from \"../Login/Login\";\nimport { ErrorNotFound } from \"../NotFoundError/NotFoundError\";\nimport { Main } from \"../Main/Main\";\nimport { Movies } from \"../Movies/Movies\";\nimport { SavedMovies } from \"../SavedMovies/SavedMovies\";\nimport { Profile } from \"../Profile/Profile\";\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\";\nimport { isLoggedInContext } from \"../../context/IsLoggedInContext\";\nimport { InfoToolTip } from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({}); //поп-ап с подсказкой\n\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n  const [isSuccseed, setSuccseed] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      setLoggedIn(true);\n    }\n  }, []); //получаю данные пользователя\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    api.getUserInfo(token).then(() => {\n      setLoggedIn(true);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      api.getUserInfo(token).then(user => {\n        setCurrentUser(user);\n        setLoggedIn(true);\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn]);\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      email\n    } = _ref;\n    const token = localStorage.getItem('token');\n    api.setUserInfo(name, email, token).then(userData => {\n      setCurrentUser(userData);\n      setSuccseed(true);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n      setSuccseed(false);\n      setIsInfoToolTipOpened(true);\n    });\n  };\n\n  const onRegister = _ref2 => {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    return Auth.register(email, password, name).then(res => {\n      if (res) {\n        setSuccseed(true);\n        setIsInfoToolTipOpened(true);\n        setLoggedIn(true);\n        navigate(\"/movies\");\n      } else {\n        setLoggedIn(false);\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    });\n  };\n\n  const onLogin = _ref3 => {\n    let {\n      email,\n      password\n    } = _ref3;\n    return Auth.login(email, password).then(res => {\n      if (res) {\n        localStorage.setItem(\"token\", res.token);\n        setLoggedIn(true);\n        navigate(\"/movies\");\n      } else {\n        setLoggedIn(false);\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const onSignOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(isLoggedInContext.Provider, {\n      value: loggedIn,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {\n              loggedIn: loggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-in\",\n              element: /*#__PURE__*/_jsxDEV(Login, {\n                loggedIn: loggedIn,\n                onLogin: onLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-up\",\n              element: /*#__PURE__*/_jsxDEV(Register, {\n                onRegister: onRegister\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Route, {\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movies\",\n              element: /*#__PURE__*/_jsxDEV(Movies, {\n                onClose: closeAllPopups\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/saved-movies\",\n              element: /*#__PURE__*/_jsxDEV(SavedMovies, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {\n                onUpdateUser: handleUpdateUser,\n                onSignOut: onSignOut\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(ErrorNotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          id: \"reg-pic\",\n          isOpened: isInfoToolTipOpened,\n          onClose: closeAllPopups,\n          isSuccseed: isSuccseed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DTjivj/zeAQ3SSDiOYbUQynbgQ4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useState","useEffect","Routes","Route","useNavigate","Auth","ProtectedRoute","api","Register","Login","ErrorNotFound","Main","Movies","SavedMovies","Profile","CurrentUserContext","isLoggedInContext","InfoToolTip","App","navigate","loggedIn","setLoggedIn","currentUser","setCurrentUser","isInfoToolTipOpened","setIsInfoToolTipOpened","isSuccseed","setSuccseed","token","localStorage","getItem","getUserInfo","then","catch","err","console","log","user","handleUpdateUser","name","email","setUserInfo","userData","closeAllPopups","error","onRegister","password","register","res","onLogin","login","setItem","onSignOut","clear"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport * as Auth from \"../../utils/auth\";\nimport { ProtectedRoute } from \"../ProtectedRoute/ProtectedRoute\";\nimport { api } from \"../../utils/api\";\nimport { Register } from \"../Registrer/Register\";\nimport { Login } from \"../Login/Login\";\nimport { ErrorNotFound } from \"../NotFoundError/NotFoundError\";\nimport { Main } from \"../Main/Main\";\nimport { Movies } from \"../Movies/Movies\";\nimport { SavedMovies } from \"../SavedMovies/SavedMovies\";\nimport { Profile } from \"../Profile/Profile\";\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\";\nimport { isLoggedInContext } from \"../../context/IsLoggedInContext\";\nimport { InfoToolTip } from \"../Popup/Popup\";\n\nexport const App = () => {\n  let navigate = useNavigate();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n\n  //поп-ап с подсказкой\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n  const [isSuccseed, setSuccseed] = useState(true);\n\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setLoggedIn(true)\n    }\n  }, [])\n  //получаю данные пользователя\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    api\n      .getUserInfo(token)\n      .then(() => {\n        setLoggedIn(true);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.getUserInfo(token)\n        .then((user) => {\n          setCurrentUser(user);\n          setLoggedIn(true);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [loggedIn])\n\n\n  const handleUpdateUser = ({ name, email }) => {\n    const token = localStorage.getItem('token');\n    api\n      .setUserInfo(name, email, token)\n      .then((userData) => {\n        setCurrentUser(userData);\n        setSuccseed(true);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      });\n  };\n\n  const onRegister = ({ email, password, name }) => {\n    return Auth.register(email, password, name).then((res) => {\n      if (res) {\n        setSuccseed(true);\n        setIsInfoToolTipOpened(true);\n        setLoggedIn(true)\n        navigate(\"/movies\");\n      } else {\n        setLoggedIn(false);\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    });\n  };\n\n  const onLogin = ({ email, password }) => {\n    return Auth.login(email, password)\n      .then((res) => {\n        if (res) {\n          localStorage.setItem(\"token\", res.token);\n          setLoggedIn(true);\n          navigate(\"/movies\");\n        } else {\n          setLoggedIn(false);\n          setSuccseed(false);\n          setIsInfoToolTipOpened(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onSignOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <isLoggedInContext.Provider value={loggedIn}>\n        <div className=\"root\">\n          <Routes>\n            <Route path=\"/\" element={<Main loggedIn={loggedIn} />} />\n            {!loggedIn\n              ? (<>\n                <Route path=\"/sign-in\" element={<Login loggedIn={loggedIn} onLogin={onLogin} />} />\n                <Route path=\"/sign-up\" element={<Register onRegister={onRegister} />} />\n              </>)\n              : null\n            }\n            <Route element={<ProtectedRoute loggedIn={loggedIn} />}>\n              <Route path=\"/movies\" element={<Movies onClose={closeAllPopups} />} />\n              <Route path=\"/saved-movies\" element={<SavedMovies />} />\n              <Route path=\"/profile\" element={<Profile onUpdateUser={handleUpdateUser} onSignOut={onSignOut} />}\n              />\n            </Route>\n            <Route path=\"*\" element={<ErrorNotFound />} />\n          </Routes>\n\n          <InfoToolTip\n            id=\"reg-pic\"\n            isOpened={isInfoToolTipOpened}\n            onClose={closeAllPopups}\n            isSuccseed={isSuccseed}\n          />\n        </div>\n      </isLoggedInContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}