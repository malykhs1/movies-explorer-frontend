{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport * as Auth from \"../../utils/auth\";\nimport { ProtectedRoute } from \"../ProtectedRoute/ProtectedRoute\";\nimport { api } from \"../../utils/api\";\nimport { Register } from \"../Registrer/Register\";\nimport { Login } from \"../Login/Login\";\nimport { ErrorNotFound } from \"../NotFoundError/NotFoundError\";\nimport { Main } from \"../Main/Main\";\nimport { Movies } from \"../Movies/Movies\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { SavedMovies } from \"../SavedMovies/SavedMovies\";\nimport { Profile } from \"../Profile/Profile\";\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\"; // import { isLoggedInContext } from \"../../context/IsLoggedInContext\";\n\nimport { InfoToolTip } from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({}); //поп-ап с подсказкой\n\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n  const [isSuccseed, setSuccseed] = useState(true); //получаю данные пользователя\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    api.getUserInfo(token).then(userData => {\n      setLoggedIn(true);\n      setCurrentUser(userData);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (loggedIn) {\n      api.getUserInfo(token).then(user => {\n        setLoggedIn(true);\n        setCurrentUser(user);\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn]);\n  console.log(loggedIn);\n\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      email\n    } = _ref;\n    const token = localStorage.getItem('token');\n    api.setUserInfo(name, email, token).then(userData => {\n      setCurrentUser(userData);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const onRegister = _ref2 => {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    return Auth.register(email, password, name).then(res => {\n      if (res) {\n        setSuccseed(true);\n        setIsInfoToolTipOpened(true);\n        navigate(\"/movies\");\n      } else {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    });\n  };\n\n  const onLogin = _ref3 => {\n    let {\n      email,\n      password\n    } = _ref3;\n    return Auth.login(email, password).then(res => {\n      if (res) {\n        localStorage.setItem(\"token\", res.token);\n        setLoggedIn(true);\n        navigate(\"/movies\");\n      } else {\n        setLoggedIn(false);\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const onSignOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), !loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              loggedIn: loggedIn,\n              onLogin: onLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Movies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(SavedMovies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            loggedIn: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Profile, {\n              onUpdateUser: handleUpdateUser,\n              onSignOut: onSignOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"nav-test\",\n          element: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(ErrorNotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        id: \"reg-pic\",\n        isOpened: isInfoToolTipOpened,\n        onClose: closeAllPopups,\n        isSuccseed: isSuccseed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ap5t5WeKZmytgDOzMUmMtFVlgl4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useState","useEffect","Routes","Route","useNavigate","Auth","ProtectedRoute","api","Register","Login","ErrorNotFound","Main","Movies","Navigation","SavedMovies","Profile","CurrentUserContext","InfoToolTip","App","navigate","loggedIn","setLoggedIn","currentUser","setCurrentUser","isInfoToolTipOpened","setIsInfoToolTipOpened","isSuccseed","setSuccseed","token","localStorage","getItem","getUserInfo","then","userData","catch","err","console","log","user","handleUpdateUser","name","email","setUserInfo","closeAllPopups","error","onRegister","password","register","res","onLogin","login","setItem","onSignOut","clear"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport * as Auth from \"../../utils/auth\";\nimport { ProtectedRoute } from \"../ProtectedRoute/ProtectedRoute\";\nimport { api } from \"../../utils/api\";\nimport { Register } from \"../Registrer/Register\";\nimport { Login } from \"../Login/Login\";\nimport { ErrorNotFound } from \"../NotFoundError/NotFoundError\";\nimport { Main } from \"../Main/Main\";\nimport { Movies } from \"../Movies/Movies\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { SavedMovies } from \"../SavedMovies/SavedMovies\";\nimport { Profile } from \"../Profile/Profile\";\nimport { CurrentUserContext } from \"../../context/CurrentUserContext\";\n// import { isLoggedInContext } from \"../../context/IsLoggedInContext\";\nimport { InfoToolTip } from \"../Popup/Popup\";\n\nexport const App = () => {\n  let navigate = useNavigate();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n\n  //поп-ап с подсказкой\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n  const [isSuccseed, setSuccseed] = useState(true);\n\n\n  //получаю данные пользователя\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    api\n      .getUserInfo(token)\n      .then((userData) => {\n        setLoggedIn(true);\n        setCurrentUser(userData);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (loggedIn) {\n      api.getUserInfo(token)\n        .then((user) => {\n          setLoggedIn(true)\n          setCurrentUser(user);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [loggedIn])\n\n  console.log(loggedIn);\n\n  const handleUpdateUser = ({ name, email }) => {\n    const token = localStorage.getItem('token');\n    api\n      .setUserInfo(name, email, token)\n      .then((userData) => {\n        setCurrentUser(userData);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onRegister = ({ email, password, name }) => {\n    return Auth.register(email, password, name).then((res) => {\n      if (res) {\n        setSuccseed(true);\n        setIsInfoToolTipOpened(true);\n        navigate(\"/movies\");\n      } else {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n      }\n    });\n  };\n\n  const onLogin = ({ email, password }) => {\n    return Auth.login(email, password)\n      .then((res) => {\n        if (res) {\n          localStorage.setItem(\"token\", res.token);\n          setLoggedIn(true);\n          navigate(\"/movies\");\n        } else {\n          setLoggedIn(false);\n          setSuccseed(false);\n          setIsInfoToolTipOpened(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onSignOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    navigate(\"/\");\n  };\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      {/* <isLoggedInContext.Provider value={loggedIn}> */}\n      <div className=\"root\">\n        <Routes>\n          <Route path=\"/\" element={<Main loggedIn={loggedIn} />} />\n          {!loggedIn\n            ? (<>\n              <Route path=\"/sign-in\" element={<Login loggedIn={loggedIn} onLogin={onLogin} />} />\n              <Route path=\"/sign-up\" element={<Register onRegister={onRegister} />} />\n            </>)\n            : null\n          }\n          <Route path=\"/movies\" element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Movies />\n            </ProtectedRoute>\n          } />\n\n          <Route path=\"/saved-movies\" element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <SavedMovies />\n            </ProtectedRoute>\n          } />\n\n          <Route path=\"/profile\" element={\n            <ProtectedRoute loggedIn={loggedIn}>\n              <Profile onUpdateUser={handleUpdateUser} onSignOut={onSignOut} />\n            </ProtectedRoute>\n          }\n          />\n          <Route path=\"nav-test\" element={<Navigation />} />\n          <Route path=\"*\" element={<ErrorNotFound />} />\n        </Routes>\n\n        <InfoToolTip\n          id=\"reg-pic\"\n          isOpened={isInfoToolTipOpened}\n          onClose={closeAllPopups}\n          isSuccseed={isSuccseed}\n        />\n      </div>\n      {/* </isLoggedInContext.Provider> */}\n    </CurrentUserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}