{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { InfoToolTip } from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const imageURL = 'https://api.nomoreparties.co'; //all films from server\n\n  const [films, setFilms] = useState(null); //фильмы, которые мы будем отображать!\n\n  const [filmsShowed, setFilmsShowed] = useState(null); //залайканные фильмы\n\n  const [filmsSaved, setFilmsSaved] = useState(null); //для отрисовки\n\n  const [filmsButton, setFilmsButton] = useState(null); //устанавливаем кол-вол карточек для отображения\n\n  const [visible, setVisible] = useState(10); //прелоадер\n\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n  const [isSuccseed, setSuccseed] = useState(true);\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  const getAllFilmsFromServer = () => {\n    const token = localStorage.getItem('token');\n    apiFilm.getFilmInfo(token).then(films => {\n      localStorage.setItem('films', films);\n    });\n  };\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    // localStorage.setItem('filmsTumbler', false);\n    setPreloader(true);\n\n    try {\n      // ищем фильмы на серваке, если они не сохранены в локальном хранилище\n      if (!localStorage.getItem('films')) {\n        getAllFilmsFromServer();\n      }\n\n      let data = localStorage.getItem(JSON.stringify('films')); // const token = localStorage.getItem('token')\n      // const data = await apiFilm.getFilmInfo(token);\n      // let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      //если фильмы есть в локальном хранилище, то делать запрос к серверу мы делать не будет\n      // const token = localStorage.getItem('token')\n      // const data = await apiFilm.getFilmInfo(token);\n\n      let filterData = data.filter(_ref => {\n        let {\n          nameRU\n        } = _ref;\n        return nameRU.toLowerCase().includes(inputSearch.toLowerCase());\n      });\n\n      if (tumbler === true) {\n        localStorage.setItem('films', JSON.stringify(filterData));\n        localStorage.setItem('filmsInputSearch', inputSearch);\n        const shortFilms = filterData.filter(_ref2 => {\n          let {\n            duration\n          } = _ref2;\n          return duration <= 40;\n        });\n        setFilmsButton(shortFilms);\n        setFilmsShowed(shortFilms);\n        const spliceData = shortFilms.splice(0, visible);\n        localStorage.setItem('savedResults', JSON.stringify(spliceData));\n        setFilmsShowed(spliceData);\n        setFilms(spliceData);\n        console.log(filmsShowed);\n        console.log(films);\n      } else {\n        localStorage.setItem('films', JSON.stringify(filterData));\n        localStorage.setItem('filmsInputSearch', inputSearch);\n        setFilmsButton(filterData);\n        const spliceData = filterData.splice(0, visible);\n        localStorage.setItem('savedResults', JSON.stringify(spliceData));\n        setFilmsShowed(spliceData);\n        setFilms(filterData);\n      }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false);\n    }\n  }\n\n  async function handleGetMoviesTumbler(keyword, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n    handleGetMovies(keyword, tumbler);\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler);\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData);\n  } // добавляем количество фильмов при нажатии на кнопку\n\n\n  const handleMore = () => {\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    setFilmsShowed(newFilmsShowed);\n  };\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token');\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id\n      };\n\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    }\n  } //монтируем \n\n\n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token).then(data => {\n      setFilmsSaved(data);\n    }).catch(err => console.log(err));\n    const localStorageSaveFilms = localStorage.getItem('savedResults');\n    const localStorageFilms = localStorage.getItem('films');\n\n    if (localStorageSaveFilms) {\n      const filterData = JSON.parse(localStorageSaveFilms);\n      const allFindFilms = JSON.parse(localStorageFilms);\n      setFilmsButton(filterData);\n      setFilmsShowed(filterData);\n      setFilms(allFindFilms.splice(10));\n      console.log(films);\n      console.log(filmsShowed);\n      setPreloader(false);\n    }\n\n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');\n\n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n    }\n\n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleGetMovies: handleGetMovies,\n      filmsTumbler: filmsTumbler,\n      filmsInputSearch: filmsInputSearch,\n      handleGetMoviesTumbler: handleGetMoviesTumbler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), preloader && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }, this), !preloader && films !== null && filmsSaved !== null && filmsShowed !== null && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      handleMore: handleMore,\n      filmsRemains: films,\n      filmsButton: filmsButton,\n      films: filmsShowed,\n      savedMoviesToggle: savedMoviesToggle,\n      filmsSaved: filmsSaved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n      id: \"reg-pic\",\n      isOpened: isInfoToolTipOpened,\n      onClose: closeAllPopups,\n      isSuccseed: isSuccseed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movies, \"Rm0FgmanQVGR2Q2J15htQ+g2qhE=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","Header","SearchForm","Navigation","MoviesCardList","Footer","apiFilm","api","Preloader","InfoToolTip","Movies","imageURL","films","setFilms","filmsShowed","setFilmsShowed","filmsSaved","setFilmsSaved","filmsButton","setFilmsButton","visible","setVisible","preloader","setPreloader","filmsTumbler","setFilmsTumbler","filmsInputSearch","setFilmsInputSearch","isSuccseed","setSuccseed","isInfoToolTipOpened","setIsInfoToolTipOpened","closeAllPopups","getAllFilmsFromServer","token","localStorage","getItem","getFilmInfo","then","setItem","handleGetMovies","inputSearch","tumbler","data","JSON","stringify","filterData","filter","nameRU","toLowerCase","includes","shortFilms","duration","spliceData","splice","console","log","err","removeItem","handleGetMoviesTumbler","keyword","filterDataShowed","concat","handleMore","newFilmsShowed","savedMoviesToggle","movie","fav","savedMovie","country","director","year","description","nameEN","image","url","trailer","trailerLink","thumbnail","movieId","id","addNewCard","newSaved","getLikeMovies","error","removeNewCard","_id","catch","localStorageSaveFilms","localStorageFilms","parse","allFindFilms","localStorageFilmsInputSearch","localStorageFilmsTumbler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { InfoToolTip } from \"../Popup/Popup\";\n\n\nexport const Movies = () => {\n\n  const imageURL = 'https://api.nomoreparties.co';\n\n  //all films from server\n  const [films, setFilms] = useState(null)\n  //фильмы, которые мы будем отображать!\n  const [filmsShowed, setFilmsShowed] = useState(null);\n  //залайканные фильмы\n  const [filmsSaved, setFilmsSaved] = useState(null);\n  //для отрисовки\n  const [filmsButton, setFilmsButton] = useState(null)\n\n  //устанавливаем кол-вол карточек для отображения\n  const [visible, setVisible] = useState(10);\n\n  //прелоадер\n  const [preloader, setPreloader] = useState(false);\n\n\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n\n  const [isSuccseed, setSuccseed] = useState(true);\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  const getAllFilmsFromServer = () => {\n    const token = localStorage.getItem('token')\n        apiFilm.getFilmInfo(token)\n        .then((films) => {\n          localStorage.setItem('films', films); \n        })\n  }\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    // localStorage.setItem('filmsTumbler', false);\n    setPreloader(true);\n    try {\n      // ищем фильмы на серваке, если они не сохранены в локальном хранилище\n      if (!localStorage.getItem('films')) {\n        getAllFilmsFromServer();\n      }\n      let data = localStorage.getItem(JSON.stringify('films'));\n      // const token = localStorage.getItem('token')\n      // const data = await apiFilm.getFilmInfo(token);\n      // let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n\n      //если фильмы есть в локальном хранилище, то делать запрос к серверу мы делать не будет\n\n      // const token = localStorage.getItem('token')\n      // const data = await apiFilm.getFilmInfo(token);\n      let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      if (tumbler === true) {\n        localStorage.setItem('films', JSON.stringify(filterData)); \n        localStorage.setItem('filmsInputSearch', inputSearch); \n        const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n        setFilmsButton(shortFilms) \n        setFilmsShowed(shortFilms);\n        const spliceData = shortFilms.splice(0, visible);\n        localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n        setFilmsShowed(spliceData);\n        setFilms(spliceData);\n        console.log(filmsShowed);\n        console.log(films);\n       \n      }\n      else {\n        localStorage.setItem('films', JSON.stringify(filterData)); \n        localStorage.setItem('filmsInputSearch', inputSearch);\n        setFilmsButton(filterData) \n        const spliceData = filterData.splice(0, visible);\n        localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n        setFilmsShowed(spliceData);\n        setFilms(filterData);\n\n      }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false)\n    }\n  }\n\n\n  async function handleGetMoviesTumbler(keyword, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n   \n    handleGetMovies(keyword, tumbler)\n\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler); \n\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData)\n  }\n\n  // добавляем количество фильмов при нажатии на кнопку\n  const handleMore = () => {\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    setFilmsShowed(newFilmsShowed);\n  }\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token')\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id,\n      }\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false)\n                setIsInfoToolTipOpened(true);\n                console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token')\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false)\n        setIsInfoToolTipOpened(true);\n        console.log(error);      }\n    }\n  }\n\n  //монтируем \n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token)\n      .then((data) => {\n        setFilmsSaved(data);\n      })\n      .catch((err) => console.log(err));\n\n    const localStorageSaveFilms = localStorage.getItem('savedResults');\n    const localStorageFilms = localStorage.getItem('films');  \n\n    if (localStorageSaveFilms) {\n      const filterData = JSON.parse(localStorageSaveFilms);\n      const allFindFilms = JSON.parse(localStorageFilms);\n      setFilmsButton(filterData)\n      setFilmsShowed(filterData);\n      setFilms(allFindFilms.splice(10));\n      console.log(films);\n      console.log(filmsShowed);\n      setPreloader(false)\n    }\n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');  \n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n     }    \n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }    \n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <SearchForm\n        handleGetMovies={handleGetMovies}\n        filmsTumbler={filmsTumbler}\n        filmsInputSearch={filmsInputSearch}\n        handleGetMoviesTumbler={handleGetMoviesTumbler}\n      />\n      {preloader && <Preloader />}\n\n      {!preloader && films !== null && filmsSaved !== null && filmsShowed !== null &&\n\n        <MoviesCardList\n          handleMore={handleMore}\n          filmsRemains={films}\n          filmsButton={filmsButton}\n          films={filmsShowed}\n          savedMoviesToggle={savedMoviesToggle}\n          filmsSaved={filmsSaved}\n        />\n      }\n      <Footer />\n\n\n      <InfoToolTip\n            id=\"reg-pic\"\n            isOpened={isInfoToolTipOpened}\n            onClose={closeAllPopups}\n            isSuccseed={isSuccseed}\n          />\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}