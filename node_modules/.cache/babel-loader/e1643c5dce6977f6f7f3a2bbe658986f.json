{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { InfoToolTip } from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const imageURL = 'https://api.nomoreparties.co'; //all films from server\n\n  const [films, setFilms] = useState(null); //фильмы, которые мы будем отображать!\n\n  const [filmsShowed, setFilmsShowed] = useState(null); //залайканные фильмы\n\n  const [filmsSaved, setFilmsSaved] = useState(null); //устанавливаем кол-вол карточек для отображения\n\n  const [visible, setVisible] = useState(10); //прелоадер\n\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState(''); //   //покажем юзеру ошибку, если не смогли лайкнуть карточку\n\n  const [isSuccseed, setSuccseed] = useState(true);\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    console.log(tumbler);\n    setPreloader(true);\n\n    try {\n      const token = localStorage.getItem('token');\n      const data = await apiFilm.getFilmInfo(token);\n      let filterData = data.filter(_ref => {\n        let {\n          nameRU\n        } = _ref;\n        return nameRU.toLowerCase().includes(inputSearch.toLowerCase());\n      });\n\n      if (tumbler === true) {\n        localStorage.setItem('films', JSON.stringify(filterData));\n        localStorage.setItem('filmsInputSearch', inputSearch);\n        const shortFilms = filterData.filter(_ref2 => {\n          let {\n            duration\n          } = _ref2;\n          return duration <= 40;\n        });\n        setFilmsShowed(shortFilms);\n        const spliceData = shortFilms.splice(0, visible);\n        localStorage.setItem('savedResults', JSON.stringify(spliceData));\n        setFilmsShowed(spliceData);\n        setFilms(spliceData);\n      } else {\n        localStorage.setItem('films', JSON.stringify(filterData));\n        localStorage.setItem('filmsInputSearch', inputSearch);\n        const spliceData = filterData.splice(0, visible);\n        localStorage.setItem('savedResults', JSON.stringify(spliceData));\n        setFilmsShowed(spliceData);\n        setFilms(filterData);\n      }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false);\n    }\n  }\n\n  async function handleGetMoviesTumbler(keyword, tumbler) {\n    let filterDataShowed = [];\n    let filterData = []; // if (tumbler) {\n    //   setFilmsShowedWithTumbler(filmsShowed);\n    //   setFilmsWithTumbler(films);\n    //   filterDataShowed = filmsShowed.filter(({ duration }) => duration <= 40);\n    //   filterData = films.filter(({ duration }) => duration <= 40);\n    //   handleGetMovies(keyword, tumbler)\n    // } else {\n    //   filterDataShowed = filmsShowedWithTumbler;\n    //   filterData = filmsWithTumbler;\n    //   handleGetMovies(keyword, tumbler)\n    // }\n\n    handleGetMovies(keyword, tumbler);\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler);\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData);\n  } // добавляем количество фильмов при нажатии на кнопку\n\n\n  const handleMore = () => {\n    console.log(films);\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    const newFilmsShowedResult = filmsShowed.concat(films.splice(0, visible)); //20 фильмов\n\n    console.log(newFilmsShowed); //30 фильмов\n\n    console.log(newFilmsShowedResult); // setFilmsShowed(newFilmsShowed);\n    // localStorage.setItem('savedResults',JSON.stringify(newFilmsShowedResult));\n  };\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token');\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id\n      };\n\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false);\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    }\n  } //монтируем \n\n\n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token).then(data => {\n      setFilmsSaved(data);\n    }).catch(err => console.log(err));\n    const localStorageResultFilms = localStorage.getItem('savedResults');\n    const localStorageFilms = localStorage.getItem('films'); // if (localStorageFilms) {\n    //   const filterData = JSON.parse(localStorageFilms)\n    //   setFilms(filterData.splice(0, visible))\n    //   setFilmsShowed(filterData)\n    // }\n\n    if (localStorageResultFilms) {\n      const filterData = JSON.parse(localStorageResultFilms);\n      setFilmsShowed(filterData); //получается, что метод кнопки еще не сможет нарезать нам фильмов потому что мы закинули в стейт \n      //films только 10 сохраненных фильмов\n\n      setFilms(filterData);\n      setPreloader(false);\n    }\n\n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');\n\n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n    }\n\n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleGetMovies: handleGetMovies,\n      filmsTumbler: filmsTumbler,\n      filmsInputSearch: filmsInputSearch,\n      handleGetMoviesTumbler: handleGetMoviesTumbler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), preloader && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }, this), !preloader && films !== null && filmsSaved !== null && filmsShowed !== null && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      handleMore: handleMore,\n      filmsRemains: films,\n      films: filmsShowed,\n      savedMoviesToggle: savedMoviesToggle,\n      filmsSaved: filmsSaved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n      id: \"reg-pic\",\n      isOpened: isInfoToolTipOpened,\n      onClose: closeAllPopups,\n      isSuccseed: isSuccseed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // import React, { useEffect, useState } from \"react\";\n// import { Header } from \"../Header/Header\";\n// import { SearchForm } from \"../SearchForm/SearchForm\";\n// import { Navigation } from \"../Navigation/Navigation\";\n// import { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\n// import { Footer } from \"../Footer/Footer\";\n// import { apiFilm } from \"../../utils/MoviesApi\";\n// import { api } from \"../../utils/api\";\n// import { Preloader } from \"../Preloader/Loader\";\n// import { InfoToolTip } from \"../Popup/Popup\";\n// export const Movies = () => {\n//   const imageURL = 'https://api.nomoreparties.co';\n//   //all films from server\n//   const [films, setFilms] = useState(null)\n//   //фильмы, которые мы будем отображать!\n//   const [filmsShowed, setFilmsShowed] = useState(null);\n//   //залайканные фильмы\n//   const [filmsSaved, setFilmsSaved] = useState(null);\n//   //устанавливаем кол-вол карточек для отображения\n//   const [visible, setVisible] = useState(10);\n//   //прелоадер\n//   const [preloader, setPreloader] = useState(false);\n//   const [filmsTumbler, setFilmsTumbler] = useState(false);\n//   const [filmsInputSearch, setFilmsInputSearch] = useState('');\n//   //покажем юзеру ошибку, если не смогли лайкнуть карточку\n//   const [isSuccseed, setSuccseed] = useState(true);\n//   const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n//   const closeAllPopups = () => {\n//     setIsInfoToolTipOpened(false);\n//   };\n//   async function handleGetMovies(inputSearch, tumbler) {\n//     // localStorage.setItem('filmsTumbler', false);\n//     setPreloader(true);\n//     try {\n//       const token = localStorage.getItem('token')\n//       const data = await apiFilm.getFilmInfo(token);\n//       let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n//       if (tumbler === true) {\n//         localStorage.setItem('films', JSON.stringify(filterData)); \n//         localStorage.setItem('filmsInputSearch', inputSearch); \n//         const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n//         setFilmsShowed(shortFilms);\n//         const spliceData = shortFilms.splice(0, visible);\n//         localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n//         // localStorage.setItem('savedResults',JSON.stringify(filterData.concat(spliceData))); \n//         setFilmsShowed(spliceData);\n//         setFilms(spliceData);\n//       }\n//       else {\n//         localStorage.setItem('films', JSON.stringify(filterData)); \n//         localStorage.setItem('filmsInputSearch', inputSearch);\n//         const spliceData = filterData.splice(0, visible);\n//         localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n//         // localStorage.setItem('savedResults',JSON.stringify(filterData.concat(spliceData))); \n//         setFilmsShowed(spliceData);\n//         setFilms(filterData);\n//       }\n//     } catch (err) {\n//       setFilms([]);\n//       localStorage.removeItem('films');\n//       localStorage.removeItem('filmsTumbler');\n//       localStorage.removeItem('filmsInputSearch');\n//     } finally {\n//       setPreloader(false)\n//     }\n//   }\n//   async function handleGetMoviesTumbler(keyword, tumbler) {\n//     let filterDataShowed = [];\n//     let filterData = [];\n//     handleGetMovies(keyword, tumbler)\n//     localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n//     localStorage.setItem('filmsTumbler', tumbler); \n//     setFilmsShowed(filterDataShowed);\n//     setFilms(filterData)\n//   }\n//   // добавляем количество фильмов при нажатии на кнопку\n//   const handleMore = () => {\n//     const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n//     localStorage.setItem('savedResults',JSON.stringify(newFilmsShowed)); \n//     setFilmsShowed(newFilmsShowed);\n//   }\n//   async function savedMoviesToggle(movie, fav) {\n//     if (fav) {\n//       const token = localStorage.getItem('token')\n//       const savedMovie = {\n//         country: movie.country || 'none',\n//         director: movie.director || 'none',\n//         duration: movie.duration,\n//         year: movie.year,\n//         description: movie.description || 'none',\n//         nameRU: movie.nameRU,\n//         nameEN: movie.nameEN,\n//         image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n//         trailer: movie.trailerLink || 'https://www.youtube.com',\n//         thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n//         movieId: movie.id,\n//       }\n//       try {\n//         await api.addNewCard(savedMovie, token);\n//         const newSaved = await api.getLikeMovies(token);\n//         setFilmsSaved(newSaved);\n//       } catch (error) {\n//         console.log(error);\n//         setSuccseed(false)\n//         setIsInfoToolTipOpened(true);\n//       }\n//     } else {\n//       try {\n//         const token = localStorage.getItem('token')\n//         await api.removeNewCard(movie._id, token);\n//         const newSaved = await api.getLikeMovies(token);\n//         setFilmsSaved(newSaved);\n//       } catch (error) {\n//         console.log(error);\n//         setSuccseed(false)\n//         setIsInfoToolTipOpened(true);\n//       }\n//     }\n//   }\n//   //монтируем \n//   useEffect(() => {\n//     //фильмы с сервака\n//     const token = localStorage.getItem('token');\n//     api.getLikeMovies(token)\n//       .then((data) => {\n//         setFilmsSaved(data);\n//       })\n//       .catch((err) => console.log(err));\n//     const localStorageFilms = localStorage.getItem('savedResults');\n//     if (localStorageFilms) {\n//       const filterData = JSON.parse(localStorageFilms);\n//       console.log(filterData);\n//       setFilmsShowed(filterData);\n//       setFilms(filterData);\n//       setPreloader(false)\n//     }\n//     const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n//     const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');  \n//     if (localStorageFilmsTumbler) {\n//       setFilmsTumbler(localStorageFilmsTumbler === 'true');\n//      }    \n//     if (localStorageFilmsInputSearch) {\n//       setFilmsInputSearch(localStorageFilmsInputSearch);\n//     }    \n//   }, []);\n//   return (\n//     <>\n//       <Header />\n//       <Navigation />\n//       <SearchForm\n//         handleGetMovies={handleGetMovies}\n//         filmsTumbler={filmsTumbler}\n//         filmsInputSearch={filmsInputSearch}\n//         handleGetMoviesTumbler={handleGetMoviesTumbler}\n//       />\n//       {preloader && <Preloader />}\n//       {!preloader && films !== null && filmsSaved !== null && filmsShowed !== null &&\n//         <MoviesCardList\n//           handleMore={handleMore}\n//           filmsRemains={films}\n//           films={filmsShowed}\n//           savedMoviesToggle={savedMoviesToggle}\n//           filmsSaved={filmsSaved}\n//         />\n//       }\n//       <Footer />\n//       <InfoToolTip\n//             id=\"reg-pic\"\n//             isOpened={isInfoToolTipOpened}\n//             onClose={closeAllPopups}\n//             isSuccseed={isSuccseed}\n//           />\n//     </>\n//   );\n// };\n\n_s(Movies, \"8fCsjz4COqpryrX7jPW9ebwVyRA=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","Header","SearchForm","Navigation","MoviesCardList","Footer","apiFilm","api","Preloader","InfoToolTip","Movies","imageURL","films","setFilms","filmsShowed","setFilmsShowed","filmsSaved","setFilmsSaved","visible","setVisible","preloader","setPreloader","filmsTumbler","setFilmsTumbler","filmsInputSearch","setFilmsInputSearch","isSuccseed","setSuccseed","isInfoToolTipOpened","setIsInfoToolTipOpened","closeAllPopups","handleGetMovies","inputSearch","tumbler","console","log","token","localStorage","getItem","data","getFilmInfo","filterData","filter","nameRU","toLowerCase","includes","setItem","JSON","stringify","shortFilms","duration","spliceData","splice","err","removeItem","handleGetMoviesTumbler","keyword","filterDataShowed","concat","handleMore","newFilmsShowed","newFilmsShowedResult","savedMoviesToggle","movie","fav","savedMovie","country","director","year","description","nameEN","image","url","trailer","trailerLink","thumbnail","movieId","id","addNewCard","newSaved","getLikeMovies","error","removeNewCard","_id","then","catch","localStorageResultFilms","localStorageFilms","parse","localStorageFilmsInputSearch","localStorageFilmsTumbler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { InfoToolTip } from \"../Popup/Popup\";\n\nexport const Movies = () => {\n\n  const imageURL = 'https://api.nomoreparties.co';\n\n  //all films from server\n  const [films, setFilms] = useState(null)\n  //фильмы, которые мы будем отображать!\n  const [filmsShowed, setFilmsShowed] = useState(null);\n  //залайканные фильмы\n  const [filmsSaved, setFilmsSaved] = useState(null);\n\n  //устанавливаем кол-вол карточек для отображения\n  const [visible, setVisible] = useState(10);\n\n  //прелоадер\n  const [preloader, setPreloader] = useState(false);\n\n\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n\n  //   //покажем юзеру ошибку, если не смогли лайкнуть карточку\n  const [isSuccseed, setSuccseed] = useState(true);\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n\n  const closeAllPopups = () => {\n    setIsInfoToolTipOpened(false);\n  };\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    console.log(tumbler);\n    setPreloader(true);\n    try {\n      const token = localStorage.getItem('token')\n      const data = await apiFilm.getFilmInfo(token);\n      let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      if (tumbler === true) {\n        localStorage.setItem('films', JSON.stringify(filterData)); \n        localStorage.setItem('filmsInputSearch', inputSearch); \n        const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n        setFilmsShowed(shortFilms);\n        const spliceData = shortFilms.splice(0, visible);\n        localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n        setFilmsShowed(spliceData);\n        setFilms(spliceData);\n      }\n      else {\n        localStorage.setItem('films', JSON.stringify(filterData)); \n        localStorage.setItem('filmsInputSearch', inputSearch);\n        const spliceData = filterData.splice(0, visible);\n        localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n        setFilmsShowed(spliceData);\n        setFilms(filterData);\n\n      }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false)\n    }\n  }\n\n\n  async function handleGetMoviesTumbler(keyword, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n    // if (tumbler) {\n    //   setFilmsShowedWithTumbler(filmsShowed);\n    //   setFilmsWithTumbler(films);\n\n    //   filterDataShowed = filmsShowed.filter(({ duration }) => duration <= 40);\n    //   filterData = films.filter(({ duration }) => duration <= 40);\n    //   handleGetMovies(keyword, tumbler)\n    // } else {\n    //   filterDataShowed = filmsShowedWithTumbler;\n    //   filterData = filmsWithTumbler;\n    //   handleGetMovies(keyword, tumbler)\n    // }\n    handleGetMovies(keyword, tumbler)\n\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler); \n\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData)\n  }\n\n  // добавляем количество фильмов при нажатии на кнопку\n  const handleMore = () => {\n    console.log(films);\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    const newFilmsShowedResult = filmsShowed.concat(films.splice(0, visible));\n    //20 фильмов\n    console.log(newFilmsShowed);\n    //30 фильмов\n    console.log(newFilmsShowedResult);\n    // setFilmsShowed(newFilmsShowed);\n    // localStorage.setItem('savedResults',JSON.stringify(newFilmsShowedResult));\n  }\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token')\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id,\n      }\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false)\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token')\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        setSuccseed(false)\n        setIsInfoToolTipOpened(true);\n        console.log(error);\n      }\n    }\n  }\n\n  //монтируем \n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token)\n      .then((data) => {\n        setFilmsSaved(data);\n      })\n      .catch((err) => console.log(err));\n\n    const localStorageResultFilms = localStorage.getItem('savedResults');\n    const localStorageFilms = localStorage.getItem('films');\n\n    // if (localStorageFilms) {\n    //   const filterData = JSON.parse(localStorageFilms)\n    //   setFilms(filterData.splice(0, visible))\n    //   setFilmsShowed(filterData)\n    // }\n\n    if (localStorageResultFilms) {\n      const filterData = JSON.parse(localStorageResultFilms);\n      setFilmsShowed(filterData);\n      //получается, что метод кнопки еще не сможет нарезать нам фильмов потому что мы закинули в стейт \n      //films только 10 сохраненных фильмов\n      setFilms(filterData)\n      setPreloader(false)\n    }\n    \n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');  \n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n     }    \n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }    \n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <SearchForm\n        handleGetMovies={handleGetMovies}\n        filmsTumbler={filmsTumbler}\n        filmsInputSearch={filmsInputSearch}\n        handleGetMoviesTumbler={handleGetMoviesTumbler}\n      />\n      {preloader && <Preloader />}\n\n      {!preloader && films !== null && filmsSaved !== null && filmsShowed !== null &&\n\n        <MoviesCardList\n          handleMore={handleMore}\n          filmsRemains={films}\n          films={filmsShowed}\n          savedMoviesToggle={savedMoviesToggle}\n          filmsSaved={filmsSaved}\n        />\n      }\n      <Footer />\n\n      <InfoToolTip\n            id=\"reg-pic\"\n            isOpened={isInfoToolTipOpened}\n            onClose={closeAllPopups}\n            isSuccseed={isSuccseed}\n          />\n    </>\n  );\n};\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { Header } from \"../Header/Header\";\n// import { SearchForm } from \"../SearchForm/SearchForm\";\n// import { Navigation } from \"../Navigation/Navigation\";\n// import { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\n// import { Footer } from \"../Footer/Footer\";\n// import { apiFilm } from \"../../utils/MoviesApi\";\n// import { api } from \"../../utils/api\";\n// import { Preloader } from \"../Preloader/Loader\";\n// import { InfoToolTip } from \"../Popup/Popup\";\n\n// export const Movies = () => {\n\n//   const imageURL = 'https://api.nomoreparties.co';\n\n//   //all films from server\n//   const [films, setFilms] = useState(null)\n//   //фильмы, которые мы будем отображать!\n//   const [filmsShowed, setFilmsShowed] = useState(null);\n//   //залайканные фильмы\n//   const [filmsSaved, setFilmsSaved] = useState(null);\n\n//   //устанавливаем кол-вол карточек для отображения\n//   const [visible, setVisible] = useState(10);\n\n//   //прелоадер\n//   const [preloader, setPreloader] = useState(false);\n\n\n//   const [filmsTumbler, setFilmsTumbler] = useState(false);\n//   const [filmsInputSearch, setFilmsInputSearch] = useState('');\n\n//   //покажем юзеру ошибку, если не смогли лайкнуть карточку\n//   const [isSuccseed, setSuccseed] = useState(true);\n//   const [isInfoToolTipOpened, setIsInfoToolTipOpened] = useState(false);\n\n//   const closeAllPopups = () => {\n//     setIsInfoToolTipOpened(false);\n//   };\n\n\n//   async function handleGetMovies(inputSearch, tumbler) {\n//     // localStorage.setItem('filmsTumbler', false);\n//     setPreloader(true);\n//     try {\n//       const token = localStorage.getItem('token')\n//       const data = await apiFilm.getFilmInfo(token);\n//       let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n//       if (tumbler === true) {\n//         localStorage.setItem('films', JSON.stringify(filterData)); \n//         localStorage.setItem('filmsInputSearch', inputSearch); \n//         const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n//         setFilmsShowed(shortFilms);\n//         const spliceData = shortFilms.splice(0, visible);\n//         localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n//         // localStorage.setItem('savedResults',JSON.stringify(filterData.concat(spliceData))); \n//         setFilmsShowed(spliceData);\n//         setFilms(spliceData);\n       \n//       }\n//       else {\n//         localStorage.setItem('films', JSON.stringify(filterData)); \n//         localStorage.setItem('filmsInputSearch', inputSearch);\n//         const spliceData = filterData.splice(0, visible);\n//         localStorage.setItem('savedResults',JSON.stringify(spliceData)); \n//         // localStorage.setItem('savedResults',JSON.stringify(filterData.concat(spliceData))); \n//         setFilmsShowed(spliceData);\n//         setFilms(filterData);\n\n//       }\n//     } catch (err) {\n//       setFilms([]);\n//       localStorage.removeItem('films');\n//       localStorage.removeItem('filmsTumbler');\n//       localStorage.removeItem('filmsInputSearch');\n//     } finally {\n//       setPreloader(false)\n//     }\n//   }\n\n\n//   async function handleGetMoviesTumbler(keyword, tumbler) {\n//     let filterDataShowed = [];\n//     let filterData = [];\n//     handleGetMovies(keyword, tumbler)\n\n//     localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n//     localStorage.setItem('filmsTumbler', tumbler); \n\n//     setFilmsShowed(filterDataShowed);\n//     setFilms(filterData)\n//   }\n\n//   // добавляем количество фильмов при нажатии на кнопку\n//   const handleMore = () => {\n//     const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n//     localStorage.setItem('savedResults',JSON.stringify(newFilmsShowed)); \n//     setFilmsShowed(newFilmsShowed);\n//   }\n\n//   async function savedMoviesToggle(movie, fav) {\n//     if (fav) {\n//       const token = localStorage.getItem('token')\n//       const savedMovie = {\n//         country: movie.country || 'none',\n//         director: movie.director || 'none',\n//         duration: movie.duration,\n//         year: movie.year,\n//         description: movie.description || 'none',\n//         nameRU: movie.nameRU,\n//         nameEN: movie.nameEN,\n//         image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n//         trailer: movie.trailerLink || 'https://www.youtube.com',\n//         thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n//         movieId: movie.id,\n//       }\n//       try {\n//         await api.addNewCard(savedMovie, token);\n//         const newSaved = await api.getLikeMovies(token);\n//         setFilmsSaved(newSaved);\n//       } catch (error) {\n//         console.log(error);\n//         setSuccseed(false)\n//         setIsInfoToolTipOpened(true);\n//       }\n//     } else {\n//       try {\n//         const token = localStorage.getItem('token')\n//         await api.removeNewCard(movie._id, token);\n//         const newSaved = await api.getLikeMovies(token);\n//         setFilmsSaved(newSaved);\n//       } catch (error) {\n//         console.log(error);\n//         setSuccseed(false)\n//         setIsInfoToolTipOpened(true);\n//       }\n//     }\n//   }\n\n//   //монтируем \n//   useEffect(() => {\n//     //фильмы с сервака\n//     const token = localStorage.getItem('token');\n//     api.getLikeMovies(token)\n//       .then((data) => {\n//         setFilmsSaved(data);\n//       })\n//       .catch((err) => console.log(err));\n\n//     const localStorageFilms = localStorage.getItem('savedResults');\n\n//     if (localStorageFilms) {\n//       const filterData = JSON.parse(localStorageFilms);\n//       console.log(filterData);\n//       setFilmsShowed(filterData);\n//       setFilms(filterData);\n//       setPreloader(false)\n//     }\n//     const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n//     const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');  \n//     if (localStorageFilmsTumbler) {\n//       setFilmsTumbler(localStorageFilmsTumbler === 'true');\n//      }    \n//     if (localStorageFilmsInputSearch) {\n//       setFilmsInputSearch(localStorageFilmsInputSearch);\n//     }    \n//   }, []);\n\n//   return (\n//     <>\n//       <Header />\n//       <Navigation />\n//       <SearchForm\n//         handleGetMovies={handleGetMovies}\n//         filmsTumbler={filmsTumbler}\n//         filmsInputSearch={filmsInputSearch}\n//         handleGetMoviesTumbler={handleGetMoviesTumbler}\n//       />\n//       {preloader && <Preloader />}\n\n//       {!preloader && films !== null && filmsSaved !== null && filmsShowed !== null &&\n\n//         <MoviesCardList\n//           handleMore={handleMore}\n//           filmsRemains={films}\n//           films={filmsShowed}\n//           savedMoviesToggle={savedMoviesToggle}\n//           filmsSaved={filmsSaved}\n//         />\n//       }\n//       <Footer />\n\n//       <InfoToolTip\n//             id=\"reg-pic\"\n//             isOpened={isInfoToolTipOpened}\n//             onClose={closeAllPopups}\n//             isSuccseed={isSuccseed}\n//           />\n//     </>\n//   );\n// };"]},"metadata":{},"sourceType":"module"}