{"ast":null,"code":"import _asyncToGenerator from\"/Users/aleksandrmalyh/dev/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/aleksandrmalyh/dev/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/aleksandrmalyh/dev/movies-explorer-frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import{Header}from\"../Header/Header\";import{SearchForm}from\"../SearchForm/SearchForm\";import{Navigation}from\"../Navigation/Navigation\";import{MoviesCardList}from\"../MoviesCardList/MoviesCadList\";import{Preloader}from\"../Preloader/Loader\";import{Footer}from\"../Footer/Footer\";import{api}from\"../../utils/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SavedMovies=function SavedMovies(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),films=_useState2[0],setFilms=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),preloader=_useState4[0],setPreloader=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),filmsTumbler=_useState6[0],setFilmsTumbler=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),filmsInputSearch=_useState8[0],setFilmsInputSearch=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),filmsShowed=_useState10[0],setFilmsShowed=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),filmsWithTumbler=_useState12[0],setFilmsWithTumbler=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),filmsShowedWithTumbler=_useState14[0],setFilmsShowedWithTumbler=_useState14[1];function handleGetMovies(_x,_x2){return _handleGetMovies.apply(this,arguments);}function _handleGetMovies(){_handleGetMovies=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputSearch,tumbler){var data,filterData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPreloader(true);try{data=films;filterData=data.filter(function(_ref){var nameRU=_ref.nameRU;return nameRU.toLowerCase().includes(inputSearch.toLowerCase());});if(tumbler)filterData.filter(function(_ref2){var duration=_ref2.duration;return duration<=40;});setFilmsShowed(filterData);if(inputSearch){localStorage.setItem('savedFilms',JSON.stringify(filterData));// сохраняем в локалсторедж\nlocalStorage.setItem('savedFilmsTumbler',tumbler);// сохраняем в локалсторедж состояние тумблера\nlocalStorage.setItem('savedFilmsInputSearch',inputSearch);// сохраняем в локалсторедж то что ввели в поиск\n}else{localStorage.removeItem('savedFilms');localStorage.removeItem('savedFilmsTumbler');localStorage.removeItem('savedFilmsInputSearch');}}catch(_unused){setFilms([]);localStorage.removeItem('savedFilms');localStorage.removeItem('savedFilmsTumbler');localStorage.removeItem('savedFilmsInputSearch');}finally{setPreloader(false);}case 2:case\"end\":return _context.stop();}}},_callee);}));return _handleGetMovies.apply(this,arguments);}function handleGetMoviesTumbler(_x3,_x4){return _handleGetMoviesTumbler.apply(this,arguments);}function _handleGetMoviesTumbler(){_handleGetMoviesTumbler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputSearch,tumbler){var filterDataShowed,filterData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:filterDataShowed=[];filterData=[];if(tumbler){setFilmsShowedWithTumbler(filmsShowed);setFilmsWithTumbler(films);filterDataShowed=filmsShowed.filter(function(_ref3){var duration=_ref3.duration;return duration<=40;});filterData=films.filter(function(_ref4){var duration=_ref4.duration;return duration<=40;});handleGetMovies(inputSearch,tumbler);}else{filterDataShowed=filmsShowedWithTumbler;filterData=filmsWithTumbler;handleGetMovies(inputSearch,tumbler);}localStorage.setItem('savedFilmsTumbler',tumbler);// сохраняем в локалсторедж состояние тумблера\nsetFilmsShowed(filterDataShowed);setFilms(filterData);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _handleGetMoviesTumbler.apply(this,arguments);}function savedMoviesToggle(_x5,_x6){return _savedMoviesToggle.apply(this,arguments);}function _savedMoviesToggle(){_savedMoviesToggle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(film,fav){var token,newFilms;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(fav){_context3.next=14;break;}_context3.prev=1;token=localStorage.getItem('token');_context3.next=5;return api.removeNewCard(film._id,token);case 5:_context3.next=7;return api.getLikeMovies(token);case 7:newFilms=_context3.sent;setFilmsShowed(newFilms);// setFilms(newFilms);\n_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return _savedMoviesToggle.apply(this,arguments);}useEffect(function(){var localStorageFilms=localStorage.getItem('savedFilms');if(localStorageFilms){setFilms(JSON.parse(localStorageFilms));// const localStorageFilmsTumbler = localStorage.getItem('savedFilmsTumbler');\nvar localStorageFilmsInputSearch=localStorage.getItem('savedFilmsInputSearch');// if (localStorageFilmsTumbler) {\n//   setFilmsTumbler(localStorageFilmsTumbler === 'true');\n// }\nif(localStorageFilmsInputSearch){setFilmsInputSearch(localStorageFilmsInputSearch);}}// else {\n//   try {\n//     const token = localStorage.getItem('token')\n//     const data = await api.getLikeMovies(token);\n//     setFilms(data);\n//     setFilmsShowed(data);\n//   }\n//   catch (err) {\n//     console.log(err);\n//   }\n// }\n},[]);useEffect(function(){var token=localStorage.getItem('token');api.getLikeMovies(token).then(function(data){setFilms(data);setFilmsShowed(data);}).catch(function(err){return console.log(err);});},[]);//  const getSavedMovies = () => {\n//   const token = localStorage.getItem('token');\n//   api.getLikeMovies(token)\n//     .then((data) => {\n//       setFilms(data);\n//       setFilmsShowed(data);\n//       console.log(data);\n//     })\n//     .catch((err) => console.log(err));\n// }\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(SearchForm,{handleGetMovies:handleGetMovies,filmsTumbler:filmsTumbler,filmsInputSearch:filmsInputSearch,handleGetMoviesTumbler:handleGetMoviesTumbler}),preloader&&/*#__PURE__*/_jsx(Preloader,{}),!preloader&&films!==null&&/*#__PURE__*/_jsx(MoviesCardList,{filmsRemains:[],savedMoviesToggle:savedMoviesToggle,films:filmsShowed}),/*#__PURE__*/_jsx(Footer,{})]});};// handleClickAddCards={handleClickAddCards} \n// showAddFilmsButton={showAddFilmsButton}\n// let filmSearch = JSON.parse(localStorage.getItem(\"filmSearch\"));\n// console.log(filmSearch);\n// useEffect(() => {\n//   if (filmSearch) {\n//     setFilmsShowed(filmSearch)\n//   }\n// }, [])\n//получаем все фильмы и записываем их в localstorage\n// useEffect(() => {\n//   apiFilm.getFilmInfo()\n//     .then((filmData) => {\n//       localStorage.setItem(\"filmData\", JSON.stringify(filmData));\n//       filmData = JSON.parse(localStorage.getItem(\"filmData\"));\n//       // setFilms(filmData)\n//     })\n//     .catch((err) => console.log(err));\n// }, []);\n// useEffect(() => {\n//   if (films) {\n//     onMovieSearch()\n//   }\n// })\n// let resultSearchShort = films.filter(({ duration, nameRU }) => duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase()));\n// useEffect(() => {\n//   let filmsShowedLocal = JSON.parse(localStorage.getItem (\"filmSearch\"));\n//   setFilmsShowed(filmsShowedLocal)\n// }, [setFilmsShowed])\n// useEffect(() => {\n//   let localFilmsSearch = JSON.parse(localStorage.getItem (\"filmSearch\"));\n//   if (localFilmsSearch) {\n//     onMovieSearch(localFilmsSearch, tumbler)\n//   }\n// }, [])\n// /* eslint-disable react-hooks/exhaustive-deps */\n// import { useEffect, useState } from \"react\";\n// import { Header } from \"../Header/Header\";\n// import { SearchForm } from \"../SearchForm/SearchForm\";\n// import { Navigation } from \"../Navigation/Navigation\";\n// import { Footer } from \"../Footer/Footer\";\n// import { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\n// export const SavedMovies = () => {\n//   const [filmsShowed, setFilmsShowed] = useState(null);\n//   const [visible, setVisible] = useState(10);\n//   let filmsSaved = JSON.parse(localStorage.getItem(\"favFilmData\"));\n//   const onMoviesSearch = (keyword, tumbler) => {\n//     const localStorageFilmsData = localStorage.getItem(\"favFilmData\");\n//     if (localStorageFilmsData) {\n//       const filmsShowedLocal = JSON.parse(localStorageFilmsData)\n//     let resultSearch = filmsShowedLocal.filter(({nameRU}) => {\n//        return nameRU.toLowerCase().includes(keyword.toLowerCase());\n//     });\n//     if (!tumbler) {\n//       localStorage.setItem(\"filmSearch\", JSON.stringify(resultSearch)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsSavedInputSearch', keyword); // сохранаяем строку поиска\n//       const spliceData = resultSearch.splice(0, visible);\n//       setFilmsShowed(spliceData);\n//     } if (tumbler) {\n//       let resultSearchShort = filmsShowedLocal.filter(({duration, nameRU}) => {\n//         return duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n//       })\n//       localStorage.setItem(\"filmSearch\", JSON.stringify(resultSearchShort)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsSavedInputSearch', keyword); // сохранаяем строку поиска\n//       setFilmsShowed(resultSearchShort);\n//     } \n//     }\n//   }\n//   // useEffect(async ()=>{\n//   //   const localStorageFilms = localStorage.getItem('favFilmData');\n//   //   if (localStorageFilms) {\n//   //     setFilmsShowed(JSON.parse(localStorageFilms));\n//   //   console.log(filmsShowed);\n//   //   const localStorageInputState = localStorage.getItem('filmsSavedInputSearch');\n//   //   const localStorageTumblerState = localStorage.getItem('tumblerState');\n//   //   if (localStorageTumblerState) {\n//   //     const tumblerState = JSON.parse(localStorageTumblerState);\n//   //     const inputState = localStorageInputState;\n//   //     onMovieSearch(inputState, tumblerState)\n//   //   } \n//   //   }\n//   // })\n//    // добавляем количество фильмов при нажатии на кнопку\n//   //  const addMoreFilms = () => {\n//   //   const spliceFilms = films;\n//   //   const newFilmsShowed = filmsShowed.concat(spliceFilms.splice(0, visible));\n//   //   setFilmsShowed(newFilmsShowed);\n//   //   setFilms(spliceFilms);\n//   // }\n//   return (\n//     <>\n//      <Header />\n//       <Navigation />\n//       <SearchForm onMoviesSearch={onMoviesSearch} />\n//       {/* <MoviesCardList filmsShowed={filmsShowed} /> */}\n//       <Footer />\n//     </>\n//   );\n// };\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     api.getMovies(token)\n//       .then((filmData) => {\n//         console.log(filmData);\n//         localStorage.setItem(\"favFilmData\", JSON.stringify(filmData)); //фильмы, найденные по ключу\n//         setLikeFilms(filmData)\n//       })\n//       .catch((err) => console.log(err));\n//       const localStorageInputState = localStorage.getItem('filmsInputSearch');\n//       const localStorageTumblerState = localStorage.getItem('tumblerState');\n//       if (localStorageInputState) {\n//         const tumblerState = JSON.parse(localStorageTumblerState);\n//         const inputState = localStorageInputState;\n//         // onMovieSearch(inputState, tumblerState)\n//       }\n// }, []);\n//sometimes ago its work\n//  //all films from server\n//  const [likeFilms, setLikeFilms] = useState(null)\n//  //фильмы, которые мы будем отображать!\n//  const [filmsShowedLike, setFilmsShowedLike] = useState(null);\n//  //новая логика поиска фильмов\n//  //устанавливаем кол-вол карточек для отображения\n//  const [visible, setVisible] = useState(10);\n// useEffect(() => {\n//   getSavedMovies();\n// }, [])\n// добавляем количество фильмов при нажатии на кнопку\n// const addMoreFilms = () => {\n//   const spliceFilms = likeFilms;\n//   const newFilmsShowed = filmsShowedLike.concat(spliceFilms.splice(0, visible));\n//   setFilmsShowedLike(newFilmsShowed);\n//   setLikeFilms(spliceFilms);\n// }\n// const getSavedMovies = () => {\n//   const token = localStorage.getItem('token');\n//   api.getLikeMovies(token)\n//     .then((filmData) => {\n//       setLikeFilms(filmData);\n//       setFilmsShowedLike(filmData)\n//       console.log(filmData);\n//     })\n//     .catch((err) => console.log(err));\n// }\n// функция поиска фильма в хранилище\n// const onMovieSearch = (keyword, tumbler) => {\n//   const likeFilmsFromServer = filmsShowedLike;\n//   if (likeFilmsFromServer) {\n//     if (!tumbler) {\n//       let resultSearchLike = likeFilmsFromServer.filter(({ duration, nameRU }) => {\n//         return duration > 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n//       });\n//       localStorage.setItem(\"filmSearchLike\", JSON.stringify(resultSearchLike)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsInputSearchLike', keyword); // сохранаяем строку поиска\n//       const spliceData = resultSearchLike.splice(0, visible);\n//       setFilmsShowedLike(spliceData);\n//     } if (tumbler) {\n//       let resultSearchShort = likeFilmsFromServer.filter(({ duration, nameRU }) => {\n//         return duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n//       })\n//       localStorage.setItem(\"filmSearchLike\", JSON.stringify(resultSearchShort)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsInputSearchLike', keyword); // сохранаяем строку поиска\n//       setFilmsShowedLike(resultSearchShort);\n//     }\n//   }\n// }\n// const handleDeleteFilm = (movieId) => {\n//   const token = localStorage.getItem('token');\n//   api.removeNewCard(movieId, token)\n//     .then(() => getSavedMovies())\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// }","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/SavedMovies/SavedMovies.js"],"names":["React","useEffect","useState","Header","SearchForm","Navigation","MoviesCardList","Preloader","Footer","api","SavedMovies","films","setFilms","preloader","setPreloader","filmsTumbler","setFilmsTumbler","filmsInputSearch","setFilmsInputSearch","filmsShowed","setFilmsShowed","filmsWithTumbler","setFilmsWithTumbler","filmsShowedWithTumbler","setFilmsShowedWithTumbler","handleGetMovies","inputSearch","tumbler","data","filterData","filter","nameRU","toLowerCase","includes","duration","localStorage","setItem","JSON","stringify","removeItem","handleGetMoviesTumbler","filterDataShowed","savedMoviesToggle","film","fav","token","getItem","removeNewCard","_id","getLikeMovies","newFilms","console","log","localStorageFilms","parse","localStorageFilmsInputSearch","then","catch","err"],"mappings":"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AAEV,YAFhB,CAGE,gBAAgB,CAAEE,gBAHpB,CAIE,sBAAsB,CAAEuB,sBAJ1B,EAHF,CASG3B,SAAS,eAAI,KAAC,SAAD,IAThB,CAWG,CAACA,SAAD,EAAcF,KAAK,GAAK,IAAxB,eACC,KAAC,cAAD,EACE,YAAY,CAAE,EADhB,CAEE,iBAAiB,CAAE+B,iBAFrB,CAGE,KAAK,CAAEvB,WAHT,EAZJ,cAkBE,KAAC,MAAD,IAlBF,GADF,CAsBD,CAxJM,CA0JP;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AAEA;AACE;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIF;AACA;AACA;AACA;AAGA;AAEA;AACA;AAME;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { Footer } from \"../Footer/Footer\";\nimport { api } from \"../../utils/api\";\n\nexport const SavedMovies = () => {\n\n  const [films, setFilms] = useState(null);\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n  const [filmsShowed, setFilmsShowed] = useState([]);\n\n  const [filmsWithTumbler, setFilmsWithTumbler] = useState([]);\n  const [filmsShowedWithTumbler, setFilmsShowedWithTumbler] = useState([]);\n\n  async function handleGetMovies(inputSearch, tumbler) {\n    setPreloader(true);\n\n    try {\n      const data = films;\n      let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      if (tumbler)\n        filterData.filter(({ duration }) => duration <= 40);\n      setFilmsShowed(filterData);\n      if (inputSearch) {\n        localStorage.setItem('savedFilms', JSON.stringify(filterData)); // сохраняем в локалсторедж\n        localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n        localStorage.setItem('savedFilmsInputSearch', inputSearch); // сохраняем в локалсторедж то что ввели в поиск\n      } else {\n        localStorage.removeItem('savedFilms');\n        localStorage.removeItem('savedFilmsTumbler');\n        localStorage.removeItem('savedFilmsInputSearch');\n      }\n    } catch {\n\n      setFilms([]);\n      localStorage.removeItem('savedFilms');\n      localStorage.removeItem('savedFilmsTumbler');\n      localStorage.removeItem('savedFilmsInputSearch');\n    } finally {\n      setPreloader(false)\n    }\n  }\n\n  async function handleGetMoviesTumbler(inputSearch, tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n    if (tumbler) {\n      setFilmsShowedWithTumbler(filmsShowed);\n      setFilmsWithTumbler(films);\n\n      filterDataShowed = filmsShowed.filter(({ duration }) => duration <= 40);\n      filterData = films.filter(({ duration }) => duration <= 40);\n\n      handleGetMovies(inputSearch, tumbler)\n\n    } else {\n      filterDataShowed = filmsShowedWithTumbler;\n      filterData = filmsWithTumbler;\n      handleGetMovies(inputSearch, tumbler)\n    }\n\n    localStorage.setItem('savedFilmsTumbler', tumbler); // сохраняем в локалсторедж состояние тумблера\n\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData)\n\n  }\n\n  async function savedMoviesToggle(film, fav) {\n    if (!fav) {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(film._id, token)\n        const newFilms = await api.getLikeMovies(token);\n        setFilmsShowed(newFilms);\n        // setFilms(newFilms);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    const localStorageFilms = localStorage.getItem('savedFilms')\n    if (localStorageFilms) {\n      setFilms(JSON.parse(localStorageFilms));\n      // const localStorageFilmsTumbler = localStorage.getItem('savedFilmsTumbler');\n      const localStorageFilmsInputSearch = localStorage.getItem('savedFilmsInputSearch');\n\n      // if (localStorageFilmsTumbler) {\n      //   setFilmsTumbler(localStorageFilmsTumbler === 'true');\n      // }\n      if (localStorageFilmsInputSearch) {\n        setFilmsInputSearch(localStorageFilmsInputSearch);\n      }\n    }\n    // else {\n    //   try {\n    //     const token = localStorage.getItem('token')\n    //     const data = await api.getLikeMovies(token);\n    //     setFilms(data);\n    //     setFilmsShowed(data);\n    //   }\n    //   catch (err) {\n    //     console.log(err);\n    //   }\n    // }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token)\n      .then((data) => {\n        setFilms(data);\n        setFilmsShowed(data);\n      })\n      .catch((err) => console.log(err));\n  }, [])\n\n  //  const getSavedMovies = () => {\n  //   const token = localStorage.getItem('token');\n  //   api.getLikeMovies(token)\n  //     .then((data) => {\n  //       setFilms(data);\n  //       setFilmsShowed(data);\n  //       console.log(data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <SearchForm\n        handleGetMovies={handleGetMovies}\n        filmsTumbler={filmsTumbler}\n        filmsInputSearch={filmsInputSearch}\n        handleGetMoviesTumbler={handleGetMoviesTumbler}\n      />\n      {preloader && <Preloader />}\n\n      {!preloader && films !== null &&\n        <MoviesCardList\n          filmsRemains={[]}\n          savedMoviesToggle={savedMoviesToggle}\n          films={filmsShowed}\n        />\n      }\n      <Footer />\n    </>\n  );\n};\n\n// handleClickAddCards={handleClickAddCards} \n// showAddFilmsButton={showAddFilmsButton}\n\n// let filmSearch = JSON.parse(localStorage.getItem(\"filmSearch\"));\n// console.log(filmSearch);\n\n// useEffect(() => {\n//   if (filmSearch) {\n//     setFilmsShowed(filmSearch)\n//   }\n// }, [])\n\n //получаем все фильмы и записываем их в localstorage\n  // useEffect(() => {\n  //   apiFilm.getFilmInfo()\n  //     .then((filmData) => {\n  //       localStorage.setItem(\"filmData\", JSON.stringify(filmData));\n  //       filmData = JSON.parse(localStorage.getItem(\"filmData\"));\n  //       // setFilms(filmData)\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  // useEffect(() => {\n  //   if (films) {\n  //     onMovieSearch()\n  //   }\n  // })\n\n// let resultSearchShort = films.filter(({ duration, nameRU }) => duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase()));\n\n// useEffect(() => {\n  //   let filmsShowedLocal = JSON.parse(localStorage.getItem (\"filmSearch\"));\n  //   setFilmsShowed(filmsShowedLocal)\n  // }, [setFilmsShowed])\n\n\n  // useEffect(() => {\n  //   let localFilmsSearch = JSON.parse(localStorage.getItem (\"filmSearch\"));\n  //   if (localFilmsSearch) {\n  //     onMovieSearch(localFilmsSearch, tumbler)\n  //   }\n  // }, [])\n// /* eslint-disable react-hooks/exhaustive-deps */\n// import { useEffect, useState } from \"react\";\n// import { Header } from \"../Header/Header\";\n// import { SearchForm } from \"../SearchForm/SearchForm\";\n// import { Navigation } from \"../Navigation/Navigation\";\n// import { Footer } from \"../Footer/Footer\";\n// import { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\n\n\n// export const SavedMovies = () => {\n//   const [filmsShowed, setFilmsShowed] = useState(null);\n\n//   const [visible, setVisible] = useState(10);\n\n\n//   let filmsSaved = JSON.parse(localStorage.getItem(\"favFilmData\"));\n\n//   const onMoviesSearch = (keyword, tumbler) => {\n//     const localStorageFilmsData = localStorage.getItem(\"favFilmData\");\n//     if (localStorageFilmsData) {\n//       const filmsShowedLocal = JSON.parse(localStorageFilmsData)\n//     let resultSearch = filmsShowedLocal.filter(({nameRU}) => {\n//        return nameRU.toLowerCase().includes(keyword.toLowerCase());\n//     });\n//     if (!tumbler) {\n//       localStorage.setItem(\"filmSearch\", JSON.stringify(resultSearch)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsSavedInputSearch', keyword); // сохранаяем строку поиска\n//       const spliceData = resultSearch.splice(0, visible);\n//       setFilmsShowed(spliceData);\n//     } if (tumbler) {\n//       let resultSearchShort = filmsShowedLocal.filter(({duration, nameRU}) => {\n//         return duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n//       })\n//       localStorage.setItem(\"filmSearch\", JSON.stringify(resultSearchShort)); //фильмы, найденные по ключу\n//       localStorage.setItem('filmsSavedInputSearch', keyword); // сохранаяем строку поиска\n//       setFilmsShowed(resultSearchShort);\n//     } \n//     }\n//   }\n\n//   // useEffect(async ()=>{\n//   //   const localStorageFilms = localStorage.getItem('favFilmData');\n//   //   if (localStorageFilms) {\n//   //     setFilmsShowed(JSON.parse(localStorageFilms));\n//   //   console.log(filmsShowed);\n//   //   const localStorageInputState = localStorage.getItem('filmsSavedInputSearch');\n//   //   const localStorageTumblerState = localStorage.getItem('tumblerState');\n//   //   if (localStorageTumblerState) {\n//   //     const tumblerState = JSON.parse(localStorageTumblerState);\n//   //     const inputState = localStorageInputState;\n//   //     onMovieSearch(inputState, tumblerState)\n//   //   } \n//   //   }\n//   // })\n\n\n\n\n//    // добавляем количество фильмов при нажатии на кнопку\n//   //  const addMoreFilms = () => {\n//   //   const spliceFilms = films;\n//   //   const newFilmsShowed = filmsShowed.concat(spliceFilms.splice(0, visible));\n//   //   setFilmsShowed(newFilmsShowed);\n//   //   setFilms(spliceFilms);\n//   // }\n\n\n//   return (\n//     <>\n//      <Header />\n//       <Navigation />\n//       <SearchForm onMoviesSearch={onMoviesSearch} />\n//       {/* <MoviesCardList filmsShowed={filmsShowed} /> */}\n//       <Footer />\n//     </>\n//   );\n// };\n\n  //   useEffect(() => {\n  //     const token = localStorage.getItem('token');\n  //     api.getMovies(token)\n  //       .then((filmData) => {\n  //         console.log(filmData);\n  //         localStorage.setItem(\"favFilmData\", JSON.stringify(filmData)); //фильмы, найденные по ключу\n  //         setLikeFilms(filmData)\n  //       })\n  //       .catch((err) => console.log(err));\n  //       const localStorageInputState = localStorage.getItem('filmsInputSearch');\n  //       const localStorageTumblerState = localStorage.getItem('tumblerState');\n  //       if (localStorageInputState) {\n  //         const tumblerState = JSON.parse(localStorageTumblerState);\n  //         const inputState = localStorageInputState;\n  //         // onMovieSearch(inputState, tumblerState)\n  //       }\n  // }, []);\n\n\n  //sometimes ago its work\n\n\n\n//  //all films from server\n//  const [likeFilms, setLikeFilms] = useState(null)\n//  //фильмы, которые мы будем отображать!\n//  const [filmsShowedLike, setFilmsShowedLike] = useState(null);\n\n\n//  //новая логика поиска фильмов\n\n//  //устанавливаем кол-вол карточек для отображения\n//  const [visible, setVisible] = useState(10);\n\n\n\n\n\n  // useEffect(() => {\n  //   getSavedMovies();\n  // }, [])\n\n  // добавляем количество фильмов при нажатии на кнопку\n  // const addMoreFilms = () => {\n  //   const spliceFilms = likeFilms;\n  //   const newFilmsShowed = filmsShowedLike.concat(spliceFilms.splice(0, visible));\n  //   setFilmsShowedLike(newFilmsShowed);\n  //   setLikeFilms(spliceFilms);\n  // }\n\n  // const getSavedMovies = () => {\n  //   const token = localStorage.getItem('token');\n  //   api.getLikeMovies(token)\n  //     .then((filmData) => {\n  //       setLikeFilms(filmData);\n  //       setFilmsShowedLike(filmData)\n  //       console.log(filmData);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n  // функция поиска фильма в хранилище\n  // const onMovieSearch = (keyword, tumbler) => {\n  //   const likeFilmsFromServer = filmsShowedLike;\n  //   if (likeFilmsFromServer) {\n  //     if (!tumbler) {\n  //       let resultSearchLike = likeFilmsFromServer.filter(({ duration, nameRU }) => {\n  //         return duration > 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n  //       });\n  //       localStorage.setItem(\"filmSearchLike\", JSON.stringify(resultSearchLike)); //фильмы, найденные по ключу\n  //       localStorage.setItem('filmsInputSearchLike', keyword); // сохранаяем строку поиска\n  //       const spliceData = resultSearchLike.splice(0, visible);\n  //       setFilmsShowedLike(spliceData);\n  //     } if (tumbler) {\n  //       let resultSearchShort = likeFilmsFromServer.filter(({ duration, nameRU }) => {\n  //         return duration <= 40 && nameRU.toLowerCase().includes(keyword.toLowerCase());\n  //       })\n  //       localStorage.setItem(\"filmSearchLike\", JSON.stringify(resultSearchShort)); //фильмы, найденные по ключу\n  //       localStorage.setItem('filmsInputSearchLike', keyword); // сохранаяем строку поиска\n  //       setFilmsShowedLike(resultSearchShort);\n  //     }\n  //   }\n  // }\n\n\n  // const handleDeleteFilm = (movieId) => {\n  //   const token = localStorage.getItem('token');\n  //   api.removeNewCard(movieId, token)\n  //     .then(() => getSavedMovies())\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }"]},"metadata":{},"sourceType":"module"}