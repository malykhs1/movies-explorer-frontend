{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const imageURL = 'https://api.nomoreparties.co'; //all films from server\n\n  const [films, setFilms] = useState(null); //фильмы, которые мы будем отображать!\n\n  const [filmsShowed, setFilmsShowed] = useState(null); //залайканные фильмы\n\n  const [filmsSaved, setFilmsSaved] = useState(null); //устанавливаем кол-вол карточек для отображения\n\n  const [visible, setVisible] = useState(10); //прелоадер\n\n  const [preloader, setPreloader] = useState(false);\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n  const [filmsWithTumbler, setFilmsWithTumbler] = useState([]);\n  const [filmsShowedWithTumbler, setFilmsShowedWithTumbler] = useState([]);\n\n  async function handleGetMovies(inputSearch) {\n    setFilmsTumbler(false);\n    localStorage.setItem('filmsTumbler', false);\n    setPreloader(true);\n\n    try {\n      const token = localStorage.getItem('token');\n      const data = await apiFilm.getFilmInfo(token);\n      let filterData = data.filter(_ref => {\n        let {\n          nameRU\n        } = _ref;\n        return nameRU.toLowerCase().includes(inputSearch.toLowerCase());\n      }); // if (tumbler === true) {\n\n      localStorage.setItem('films', JSON.stringify(filterData));\n      localStorage.setItem('filmsInputSearch', inputSearch); // const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n      // setFilmsShowed(shortFilms);\n\n      const spliceData = filterData.splice(0, visible);\n      setFilmsShowed(spliceData);\n      setFilms(spliceData);\n      setFilmsShowedWithTumbler(spliceData);\n      setFilmsWithTumbler(filterData); // }\n      // else {\n      //   localStorage.setItem('films', JSON.stringify(filterData)); \n      //   localStorage.setItem('filmsInputSearch', inputSearch);\n      //   const spliceData = filterData.splice(0, visible);\n      //   setFilmsShowed(spliceData);\n      //   setFilms(filterData);\n      //   setFilmsShowedWithTumbler(spliceData);\n      //   setFilmsWithTumbler(filterData);\n      // }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false);\n    }\n  }\n\n  async function handleGetMoviesTumbler(tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n\n    if (tumbler) {\n      setFilmsShowedWithTumbler(filmsShowed);\n      setFilmsWithTumbler(films);\n      filterDataShowed = filmsShowed.filter(_ref2 => {\n        let {\n          duration\n        } = _ref2;\n        return duration <= 40;\n      });\n      filterData = films.filter(_ref3 => {\n        let {\n          duration\n        } = _ref3;\n        return duration <= 40;\n      }); // handleGetMovies(keyword, tumbler)\n    } else {\n      filterDataShowed = filmsShowedWithTumbler;\n      filterData = filmsWithTumbler; // handleGetMovies(keyword, tumbler)\n    } // handleGetMovies(keyword, tumbler)\n\n\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler);\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData);\n  } // добавляем количество фильмов при нажатии на кнопку\n\n\n  const handleMore = () => {\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    setFilmsShowed(newFilmsShowed);\n  };\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token');\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id\n      };\n\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token');\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  } //монтируем \n\n\n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token).then(data => {\n      setFilmsSaved(data);\n    }).catch(err => console.log(err));\n    const localStorageFilms = localStorage.getItem('films');\n\n    if (localStorageFilms) {\n      const filterData = JSON.parse(localStorageFilms);\n      setFilmsShowed(filterData.splice(0, visible));\n      setFilms(filterData);\n      setPreloader(false);\n    }\n\n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');\n\n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n    }\n\n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleGetMovies: handleGetMovies,\n      filmsTumbler: filmsTumbler,\n      filmsInputSearch: filmsInputSearch,\n      handleGetMoviesTumbler: handleGetMoviesTumbler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), preloader && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }, this), !preloader && films !== null && filmsSaved !== null && filmsShowed !== null && /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      handleMore: handleMore,\n      filmsRemains: films,\n      films: filmsShowed,\n      savedMoviesToggle: savedMoviesToggle,\n      filmsSaved: filmsSaved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movies, \"XApcS/PSKrseuvr5zA7wpPZkkF0=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","Header","SearchForm","Navigation","MoviesCardList","Footer","apiFilm","api","Preloader","Movies","imageURL","films","setFilms","filmsShowed","setFilmsShowed","filmsSaved","setFilmsSaved","visible","setVisible","preloader","setPreloader","filmsTumbler","setFilmsTumbler","filmsInputSearch","setFilmsInputSearch","filmsWithTumbler","setFilmsWithTumbler","filmsShowedWithTumbler","setFilmsShowedWithTumbler","handleGetMovies","inputSearch","localStorage","setItem","token","getItem","data","getFilmInfo","filterData","filter","nameRU","toLowerCase","includes","JSON","stringify","spliceData","splice","err","removeItem","handleGetMoviesTumbler","tumbler","filterDataShowed","duration","concat","handleMore","newFilmsShowed","savedMoviesToggle","movie","fav","savedMovie","country","director","year","description","nameEN","image","url","trailer","trailerLink","thumbnail","movieId","id","addNewCard","newSaved","getLikeMovies","error","console","log","removeNewCard","_id","then","catch","localStorageFilms","parse","localStorageFilmsInputSearch","localStorageFilmsTumbler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { Navigation } from \"../Navigation/Navigation\";\nimport { MoviesCardList } from \"../MoviesCardList/MoviesCadList\";\nimport { Footer } from \"../Footer/Footer\";\nimport { apiFilm } from \"../../utils/MoviesApi\";\nimport { api } from \"../../utils/api\";\nimport { Preloader } from \"../Preloader/Loader\";\n\nexport const Movies = () => {\n\n  const imageURL = 'https://api.nomoreparties.co';\n\n  //all films from server\n  const [films, setFilms] = useState(null)\n  //фильмы, которые мы будем отображать!\n  const [filmsShowed, setFilmsShowed] = useState(null);\n  //залайканные фильмы\n  const [filmsSaved, setFilmsSaved] = useState(null);\n\n  //устанавливаем кол-вол карточек для отображения\n  const [visible, setVisible] = useState(10);\n\n  //прелоадер\n  const [preloader, setPreloader] = useState(false);\n\n\n  const [filmsTumbler, setFilmsTumbler] = useState(false);\n  const [filmsInputSearch, setFilmsInputSearch] = useState('');\n\n\n  const [filmsWithTumbler, setFilmsWithTumbler] = useState([]);\n  const [filmsShowedWithTumbler, setFilmsShowedWithTumbler] = useState([]);\n\n\n  async function handleGetMovies(inputSearch) {\n    setFilmsTumbler(false)\n    localStorage.setItem('filmsTumbler', false);\n    setPreloader(true);\n    try {\n      const token = localStorage.getItem('token')\n      const data = await apiFilm.getFilmInfo(token);\n      let filterData = data.filter(({ nameRU }) => nameRU.toLowerCase().includes(inputSearch.toLowerCase()));\n      // if (tumbler === true) {\n        localStorage.setItem('films', JSON.stringify(filterData)); \n        localStorage.setItem('filmsInputSearch', inputSearch); \n        // const shortFilms = filterData.filter(({ duration }) => duration <= 40);\n        // setFilmsShowed(shortFilms);\n        const spliceData = filterData.splice(0, visible);\n\n        setFilmsShowed(spliceData);\n        setFilms(spliceData);\n\n        setFilmsShowedWithTumbler(spliceData);\n        setFilmsWithTumbler(filterData);\n      // }\n      // else {\n      //   localStorage.setItem('films', JSON.stringify(filterData)); \n      //   localStorage.setItem('filmsInputSearch', inputSearch);\n      //   const spliceData = filterData.splice(0, visible);\n      //   setFilmsShowed(spliceData);\n      //   setFilms(filterData);\n\n      //   setFilmsShowedWithTumbler(spliceData);\n      //   setFilmsWithTumbler(filterData);\n      // }\n    } catch (err) {\n      setFilms([]);\n      localStorage.removeItem('films');\n      localStorage.removeItem('filmsTumbler');\n      localStorage.removeItem('filmsInputSearch');\n    } finally {\n      setPreloader(false)\n    }\n  }\n\n\n  async function handleGetMoviesTumbler(tumbler) {\n    let filterDataShowed = [];\n    let filterData = [];\n    if (tumbler) {\n      setFilmsShowedWithTumbler(filmsShowed);\n      setFilmsWithTumbler(films);\n\n      filterDataShowed = filmsShowed.filter(({ duration }) => duration <= 40);\n      filterData = films.filter(({ duration }) => duration <= 40);\n      // handleGetMovies(keyword, tumbler)\n    } else {\n      filterDataShowed = filmsShowedWithTumbler;\n      filterData = filmsWithTumbler;\n      // handleGetMovies(keyword, tumbler)\n    }\n    // handleGetMovies(keyword, tumbler)\n\n    localStorage.setItem('films', JSON.stringify(filterDataShowed.concat(filterData)));\n    localStorage.setItem('filmsTumbler', tumbler); \n\n    setFilmsShowed(filterDataShowed);\n    setFilms(filterData)\n  }\n\n  // добавляем количество фильмов при нажатии на кнопку\n  const handleMore = () => {\n    const newFilmsShowed = filmsShowed.concat(films.splice(0, visible));\n    setFilmsShowed(newFilmsShowed);\n  }\n\n  async function savedMoviesToggle(movie, fav) {\n    if (fav) {\n      const token = localStorage.getItem('token')\n      const savedMovie = {\n        country: movie.country || 'none',\n        director: movie.director || 'none',\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description || 'none',\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        trailer: movie.trailerLink || 'https://www.youtube.com',\n        thumbnail: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\n        movieId: movie.id,\n      }\n      try {\n        await api.addNewCard(savedMovie, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        const token = localStorage.getItem('token')\n        await api.removeNewCard(movie._id, token);\n        const newSaved = await api.getLikeMovies(token);\n        setFilmsSaved(newSaved);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  //монтируем \n  useEffect(() => {\n    //фильмы с сервака\n    const token = localStorage.getItem('token');\n    api.getLikeMovies(token)\n      .then((data) => {\n        setFilmsSaved(data);\n      })\n      .catch((err) => console.log(err));\n\n    const localStorageFilms = localStorage.getItem('films');\n    if (localStorageFilms) {\n      const filterData = JSON.parse(localStorageFilms);\n      setFilmsShowed(filterData.splice(0, visible));\n      setFilms(filterData);\n      setPreloader(false)\n    }\n    const localStorageFilmsInputSearch = localStorage.getItem('filmsInputSearch');\n    const localStorageFilmsTumbler = localStorage.getItem('filmsTumbler');  \n    if (localStorageFilmsTumbler) {\n      setFilmsTumbler(localStorageFilmsTumbler === 'true');\n     }    \n    if (localStorageFilmsInputSearch) {\n      setFilmsInputSearch(localStorageFilmsInputSearch);\n    }\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Navigation />\n      <SearchForm\n        handleGetMovies={handleGetMovies}\n        filmsTumbler={filmsTumbler}\n        filmsInputSearch={filmsInputSearch}\n        handleGetMoviesTumbler={handleGetMoviesTumbler}\n      />\n      {preloader && <Preloader />}\n\n      {!preloader && films !== null && filmsSaved !== null && filmsShowed !== null &&\n\n        <MoviesCardList\n          handleMore={handleMore}\n          filmsRemains={films}\n          films={filmsShowed}\n          savedMoviesToggle={savedMoviesToggle}\n          filmsSaved={filmsSaved}\n        />\n      }\n      <Footer />\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}