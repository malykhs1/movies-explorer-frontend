{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../images/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = _ref => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  let {\n    onLogin\n  } = _ref;\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"all\"\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return;\n    }\n\n    onLogin({\n      email,\n      password\n    }).then(resetForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login__container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041C\\u0435\\u0441\\u0442\\u043E\",\n        className: \"login__logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login__title\",\n      children: \"\\u0420\\u0430\\u0434\\u044B \\u0432\\u0430\\u0441 \\u0432\\u0438\\u0434\\u0435\\u0442\\u044C!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login__label\",\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: \"Поле обязательно к заполнению! \",\n          onChange: e => setEmail(e.target.value),\n          pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: \"Введите реальный адрес электронной почты!\"\n          }\n        }),\n        value: email,\n        className: \"login__input\",\n        name: \"email\",\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__errors\",\n        children: (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login__error\",\n          children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login__label\",\n        htmlFor: \"password\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n          onChange: e => setPassword(e.target.value),\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 8,\n            message: \"Минимум 8 символов\"\n          }\n        }),\n        value: password,\n        className: \"login__input\",\n        name: \"password\",\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__errors\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) || \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isValid,\n        type: \"submit\",\n        className: \"login__button\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__signin\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login__register-link\",\n        children: \" \\u0415\\u0449\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"wwww.google.com\",\n        className: \"login__register-link\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; // useEffect(() => {\n//   if (emailError || passwordError) {\n//     setFormValid(false);\n//   } else {\n//     setFormValid(true);\n//   }\n// }, [emailError, passwordError])\n// const resetForm = () => {\n//   setEmail(\"\");\n//   setPassword(\"\");\n// };\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!email || !password) {\n//     return;\n//   }\n//   onLogin({ email, password })\n//     .then(resetForm)\n// };\n// const handleEmailChange = (e) => {\n// setEmail(e.target.value);\n// const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// if (!re.test(String(e.target.value).toLowerCase())) {\n//   setEmailError(\"Укажите корректный адрес электронной почты!\")\n// } else {\n//   setEmailError(\"\")\n// }\n// }\n// const handlePasswordChange = (e) => {\n// setPassword(e.target.value);\n// if (password.length < 8 ) {\n//   setPasswordError(\"Поле слишком короткое\")\n// } else {\n//   setPasswordError(\"\")\n// }\n// }\n// const blurHandler = (e) => {\n//   switch (e.target.name) {\n//     case 'email':\n//       setEmailDirty(true)\n//       break\n//     case 'password':\n//       setPasswordDirty(true)\n//       break\n//   }\n// }\n// const [emailDirty, setEmailDirty] = useState(false);\n// const [passwordDirty, setPasswordDirty] = useState(false);\n// const [emailError, setEmailError] = useState('Email не может быть пустым');\n// const [passwordError, setPasswordError] = useState('Пароль не может быть пустым');\n// const [formValid, setFormValid] = useState(false);\n\n_s(Login, \"DcOA1i8xriXK45IbNq1xZ0dwLiQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/aleksandrmalyh/dev/movies-explorer-frontend/src/components/Login/Login.js"],"names":["React","useState","useForm","Link","logo","Login","onLogin","register","formState","errors","isValid","mode","email","setEmail","password","setPassword","resetForm","handleSubmit","e","preventDefault","then","required","onChange","target","value","pattern","message","minLength"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../images/logo.svg\";\n\nexport const Login = ({ onLogin }) => {\n\n  const {\n    register,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: \"all\"\n  });\n  \n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    onLogin({ email, password })\n      .then(resetForm)\n  };\n\n\n \n\n  return (\n    <section className=\"login__container\">\n      <Link to=\"/\"><img src={logo} alt=\"Место\" className=\"login__logo\" /></Link>\n      <h2 className=\"login__title\">Рады вас видеть!</h2>\n      <form className=\"login__form\" onSubmit={handleSubmit}>\n        <label className=\"login__label\" htmlFor=\"email\">Email</label>\n        <input\n          {...register(\"email\", {\n            required: \"Поле обязательно к заполнению! \",\n            onChange: (e) => setEmail(e.target.value),\n            pattern: { \n              value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"Введите реальный адрес электронной почты!\"\n            },\n          })}\n          value={email}\n          className=\"login__input\"\n          name=\"email\"\n          type=\"email\"\n          required={true}\n        />\n        <div className=\"login__errors\">\n        {errors?.email && <p className=\"login__error\">{errors?.email?.message || \"Error\"}</p>}\n        </div>\n        <label className=\"login__label\" htmlFor=\"password\">Пароль</label>\n        <input\n           {...register(\"password\", {\n            onChange: (e) => setPassword(e.target.value),\n            required: \"Поле обязательно к заполнению!\",\n            minLength: {\n              value: 8,\n              message: \"Минимум 8 символов\",\n            },\n          })}\n          value={password}\n          className=\"login__input\"\n          name=\"password\"\n          type=\"password\"\n          required={true}\n        />\n        <div className=\"login__errors\">\n          <div className=\"login__error\">\n          {errors?.password && <p>{errors?.password?.message || \"Error\"}</p>}\n          </div>\n        </div>\n        <button disabled={!isValid} type=\"submit\" className=\"login__button\">\n          Войти\n        </button>\n      </form>\n      <div className=\"login__signin\">\n        <p className=\"login__register-link\"> Еще не зарегистрированы?</p>\n        <Link to=\"wwww.google.com\" className=\"login__register-link\">\n          Регистрация\n        </Link>\n      </div>\n    </section>\n  );\n};\n\n// useEffect(() => {\n//   if (emailError || passwordError) {\n//     setFormValid(false);\n//   } else {\n//     setFormValid(true);\n//   }\n// }, [emailError, passwordError])\n\n// const resetForm = () => {\n//   setEmail(\"\");\n//   setPassword(\"\");\n// };\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   if (!email || !password) {\n//     return;\n//   }\n//   onLogin({ email, password })\n//     .then(resetForm)\n// };\n\n// const handleEmailChange = (e) => {\n// setEmail(e.target.value);\n// const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// if (!re.test(String(e.target.value).toLowerCase())) {\n//   setEmailError(\"Укажите корректный адрес электронной почты!\")\n// } else {\n//   setEmailError(\"\")\n// }\n// }\n\n// const handlePasswordChange = (e) => {\n// setPassword(e.target.value);\n// if (password.length < 8 ) {\n//   setPasswordError(\"Поле слишком короткое\")\n// } else {\n//   setPasswordError(\"\")\n// }\n// }\n\n// const blurHandler = (e) => {\n//   switch (e.target.name) {\n//     case 'email':\n//       setEmailDirty(true)\n//       break\n//     case 'password':\n//       setPasswordDirty(true)\n//       break\n//   }\n// }\n\n// const [emailDirty, setEmailDirty] = useState(false);\n// const [passwordDirty, setPasswordDirty] = useState(false);\n// const [emailError, setEmailError] = useState('Email не может быть пустым');\n// const [passwordError, setPasswordError] = useState('Пароль не может быть пустым');\n// const [formValid, setFormValid] = useState(false);\n"]},"metadata":{},"sourceType":"module"}